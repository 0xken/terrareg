image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/
    - /usr/local/bin/terraform-docs

before_script:
  # Install terraform-docs
  - test -f /usr/local/bin/terraform-docs || { wget https://github.com/terraform-docs/terraform-docs/releases/download/v0.16.0/terraform-docs-v0.16.0-linux-amd64.tar.gz && tar -zxvf terraform-docs-v0.16.0-linux-amd64.tar.gz && chmod +x terraform-docs && mv terraform-docs /usr/local/bin/ && rm terraform-docs-v0.16.0-linux-amd64.tar.gz; }
  - python --version  # For debugging
  - pip install --proxy=$http_proxy virtualenv
  - virtualenv venv
  - source venv/bin/activate

test:
  script:
    - pip install --proxy=$http_proxy -r requirements-dev.txt
    - coverage run -m pytest --verbose
    - coverage report
    - coverage xml
  artifacts:
    reports:
      cobertura: coverage.xml

run:
  script:
    - python setup.py bdist_wheel
    # an alternative approach is to install and run:
    - pip install --proxy=$http_proxy dist/*
    # run the command here
  artifacts:
    paths:
      - dist/*.whl

