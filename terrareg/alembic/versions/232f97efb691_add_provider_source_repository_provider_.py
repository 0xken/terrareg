"""Add provider source, repository, provider and gpg key tables. Add namespace type field

Revision ID: 232f97efb691
Revises: fb6a94791a14
Create Date: 2023-10-15 08:15:00.249602

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '232f97efb691'
down_revision = 'fb6a94791a14'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('provider_source',
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('api_name', sa.String(length=128), nullable=True),
    sa.Column('provider_source_type', sa.Enum('GITHUB', name='providersourcetype'), nullable=True),
    sa.Column('config', sa.LargeBinary(length=16777215).with_variant(mysql.MEDIUMBLOB(), 'mysql'), nullable=True),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('gpg_key',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('namespace_id', sa.Integer(), nullable=False),
    sa.Column('ascii_armor', sa.LargeBinary(length=16777215).with_variant(mysql.MEDIUMBLOB(), 'mysql'), nullable=True),
    sa.Column('key_id', sa.String(length=1024), nullable=True),
    sa.Column('fingerprint', sa.String(length=1024), nullable=True),
    sa.Column('source', sa.String(length=1024), nullable=True),
    sa.Column('source_url', sa.String(length=1024), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['namespace_id'], ['namespace.id'], name='fk_gpg_key_namespace_id_namespace_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repository',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner', sa.String(length=128), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('provider_source_name', sa.String(length=128), nullable=False),
    sa.ForeignKeyConstraint(['provider_source_name'], ['provider_source.name'], name='fk_repository_provider_source_name_provider_source_name', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('provider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('namespace_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.Column('tier', sa.Enum('OFFICIAL', 'COMMUNITY', name='providertier'), nullable=True),
    sa.Column('repository_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['namespace_id'], ['namespace.id'], name='fk_provider_namespace_id_namespace_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], name='fk_provider_repository_id_repository_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('namespace', sa.Column('namespace_type', sa.Enum('NONE', 'GITHUB_USER', 'GITHUB_ORGANISATION', name='namespacetype'), nullable=True))
    op.execute("""UPDATE namespace set `namespace_type`='NONE'""")
    with op.batch_alter_table("namespace") as batch_op:
        batch_op.alter_column("namespace_type", nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('namespace') as batch_op:
        batch_op.drop_column('namespace_type')
    op.drop_table('provider')
    op.drop_table('repository')
    op.drop_table('gpg_key')
    op.drop_table('provider_source')
    # ### end Alembic commands ###
